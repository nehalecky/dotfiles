# XDG Base Directory compliance - load early for other configs to use
[ -f "$HOME/.config/shell/xdg-env.sh" ] && source "$HOME/.config/shell/xdg-env.sh"

# Enable Powerlevel10k instant prompt. Should stay close to the top of ~/.zshrc.
# Initialization code that may require console input (password prompts, [y/n]
# confirmations, etc.) must go above this block; everything else may go below.
if [[ -r "${XDG_CACHE_HOME:-$HOME/.cache}/p10k-instant-prompt-${(%):-%n}.zsh" ]]; then
  source "${XDG_CACHE_HOME:-$HOME/.cache}/p10k-instant-prompt-${(%):-%n}.zsh"
fi

#
# Executes commands at the start of an interactive session.
#
# Authors:
#   Sorin Ionescu <sorin.ionescu@gmail.com>
#

# Source Prezto.
if [[ -s "${ZDOTDIR:-$HOME}/.zprezto/init.zsh" ]]; then
  source "${ZDOTDIR:-$HOME}/.zprezto/init.zsh"
fi

# Homebrew
eval $(/opt/homebrew/bin/brew shellenv)

# Add ~/.local/bin to PATH for user scripts
export PATH="$HOME/.local/bin:$PATH"

## iTerm2 Shell Integration
test -e "${HOME}/.config/iterm2/shell_integration.zsh" && source "${HOME}/.config/iterm2/shell_integration.zsh"

## Dotfile Config
# Using chezmoi for dotfile management now
# Old bare repo archived to ~/Repos/dotfiles-config-bare-repo-archive

# CLI completions
eval "$(op completion zsh)"; compdef _op op        # 1Password CLI
eval "$(gh completion -s zsh)"                     # GitHub CLI
eval "$(chezmoi completion zsh)"                   # chezmoi
eval "$(uv generate-shell-completion zsh)"         # uv Python manager

# Taskwarrior completion
fpath=(~/.local/share/zsh/site-functions $fpath)
zstyle ':completion:*:*:task:*' verbose yes
zstyle ':completion:*:*:task:*:descriptions' format '%U%B%d%b%u'
zstyle ':completion:*:*:task:*' group-name ''

# npm completion (if available)
if command -v npm >/dev/null 2>&1; then
  eval "$(npm completion)"
fi

# fzf - fuzzy finder integration and completion
source <(fzf --zsh)  # Homebrew fzf integration


# Google Cloud SDK setup

  # The next line updates PATH for the Google Cloud SDK.
  # if [ -f '/Users/nhalecky/google-cloud-sdk/path.zsh.inc' ]; then . '/Users/nhalecky/google-cloud-sdk/path.zsh.inc'; fi
  # # The next line enables shell command completion for gcloud.
  # if [ -f '/Users/nhalecky/google-cloud-sdk/completion.zsh.inc' ]; then . '/Users/nhalecky/google-cloud-sdk/completion.zsh.inc'; fi


# UV Python package manager
# https://github.com/astral-sh/uv
# UV manages Python installations and virtual environments

# Prompt configuration - Toggle between Starship and Powerlevel10k  
# Set PROMPT_THEME to "starship" or "p10k" (switched to starship for modern performance)
export PROMPT_THEME="${PROMPT_THEME:-starship}"

if [[ "$PROMPT_THEME" == "starship" ]]; then
  # Initialize Starship
  eval "$(starship init zsh)"
  # Suppress P10k configuration wizard when using Starship
  export POWERLEVEL9K_DISABLE_CONFIGURATION_WIZARD=true
else
  # To customize prompt, run `p10k configure` or edit ~/.p10k.zsh.
  [[ ! -f ~/.p10k.zsh ]] || source ~/.p10k.zsh
fi

# Helper function to switch between prompts
prompt_switch() {
  if [[ "$1" == "starship" ]]; then
    export PROMPT_THEME="starship"
    echo "Switched to Starship prompt. Restart your shell or run: exec zsh"
  elif [[ "$1" == "p10k" ]]; then
    export PROMPT_THEME="p10k"
    echo "Switched to Powerlevel10k prompt. Restart your shell or run: exec zsh"
  else
    echo "Usage: prompt_switch [starship|p10k]"
    echo "Current prompt: $PROMPT_THEME"
  fi
}

# GH completion
eval "$(gh completion -s zsh)"

# Direnv hook for automatic environment activation
eval "$(direnv hook zsh)"

# Chezmoi directory notification
_chezmoi_chpwd_hook() {
    # Check if current directory has chezmoi-managed files
    if [[ "$PWD" == "$HOME" ]] || [[ "$PWD" == "$HOME/.config"* ]] || [[ "$PWD" == "$HOME/.local"* ]]; then
        if chezmoi managed --path-style=relative 2>/dev/null | grep -q "^${PWD#$HOME/}" 2>/dev/null; then
            echo "📂 \033[36mChezmoi-managed directory\033[0m (use \033[33mlg\033[0m for git operations on source)"
        fi
    fi
}

# Add to chpwd hooks (runs when directory changes)
autoload -U add-zsh-hook
add-zsh-hook chpwd _chezmoi_chpwd_hook

# Smart lazygit function for chezmoi integration
lg() {
    # Special handling for chezmoi-managed directories
    local current_dir="$PWD"
    
    # Check if we're in a directory with chezmoi-managed files
    if [[ "$current_dir" == "$HOME" ]] || [[ "$current_dir" == "$HOME/.config"* ]] || [[ "$current_dir" == "$HOME/.local"* ]]; then
        if chezmoi managed --path-style=relative 2>/dev/null | grep -q "^${current_dir#$HOME/}"; then
            echo "🏠 Detected chezmoi-managed files - opening lazygit in source directory"
            lazygit -p ~/.local/share/chezmoi
            return
        fi
    fi
    
    # Otherwise, use lazygit normally
    lazygit
}

# Doom Emacs alias
alias doom="~/.config/emacs/bin/doom"

# Show WezTerm shortcuts on terminal startup (for learning curve)
# Only show in interactive shells and not in sub-shells
if [[ $- == *i* ]] && [[ -z "$TMUX" ]] && [[ -z "$VSCODE_TERM" ]] && [[ -z "$TERM_PROGRAM" ]] && [[ "$SHLVL" -eq 1 ]]; then
  if command -v wezterm-shortcuts >/dev/null 2>&1; then
    echo ""
    wezterm-shortcuts
    echo ""
  fi
fiexport DISABLE_AUTOUPDATER=1
