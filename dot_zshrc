# XDG Base Directory compliance - load early for other configs to use
[ -f "$HOME/.config/shell/xdg-env.sh" ] && source "$HOME/.config/shell/xdg-env.sh"

# Enable Powerlevel10k instant prompt. Should stay close to the top of ~/.zshrc.
# Initialization code that may require console input (password prompts, [y/n]
# confirmations, etc.) must go above this block; everything else may go below.
if [[ -r "${XDG_CACHE_HOME:-$HOME/.cache}/p10k-instant-prompt-${(%):-%n}.zsh" ]]; then
  source "${XDG_CACHE_HOME:-$HOME/.cache}/p10k-instant-prompt-${(%):-%n}.zsh"
fi

#
# Executes commands at the start of an interactive session.
#
# Authors:
#   Sorin Ionescu <sorin.ionescu@gmail.com>
#

# Source Prezto.
if [[ -s "${ZDOTDIR:-$HOME}/.zprezto/init.zsh" ]]; then
  source "${ZDOTDIR:-$HOME}/.zprezto/init.zsh"
fi

# Homebrew
eval $(/opt/homebrew/bin/brew shellenv)

## iTerm2 Shell Integration
test -e "${HOME}/.config/iterm2/shell_integration.zsh" && source "${HOME}/.config/iterm2/shell_integration.zsh"

## Dotfile Config
# Using chezmoi for dotfile management now
# Old bare repo archived to ~/Repos/dotfiles-config-bare-repo-archive

# CLI completions
eval "$(op completion zsh)"; compdef _op op        # 1Password CLI
eval "$(gh completion -s zsh)"                     # GitHub CLI
eval "$(chezmoi completion zsh)"                   # chezmoi
eval "$(uv generate-shell-completion zsh)"         # uv Python manager

# npm completion (if available)
if command -v npm >/dev/null 2>&1; then
  eval "$(npm completion)"
fi

# fzf - fuzzy finder integration and completion
source <(fzf --zsh)  # Homebrew fzf integration


# Google Cloud SDK setup

  # The next line updates PATH for the Google Cloud SDK.
  # if [ -f '/Users/nhalecky/google-cloud-sdk/path.zsh.inc' ]; then . '/Users/nhalecky/google-cloud-sdk/path.zsh.inc'; fi
  # # The next line enables shell command completion for gcloud.
  # if [ -f '/Users/nhalecky/google-cloud-sdk/completion.zsh.inc' ]; then . '/Users/nhalecky/google-cloud-sdk/completion.zsh.inc'; fi


# UV Python package manager
# https://github.com/astral-sh/uv
# UV manages Python installations and virtual environments

# Prompt configuration - Toggle between Starship and Powerlevel10k
# Set PROMPT_THEME to "starship" or "p10k" (defaults to p10k for safety during migration)
export PROMPT_THEME="${PROMPT_THEME:-p10k}"

if [[ "$PROMPT_THEME" == "starship" ]]; then
  # Initialize Starship
  eval "$(starship init zsh)"
  # Suppress P10k configuration wizard when using Starship
  export POWERLEVEL9K_DISABLE_CONFIGURATION_WIZARD=true
else
  # To customize prompt, run `p10k configure` or edit ~/.p10k.zsh.
  [[ ! -f ~/.p10k.zsh ]] || source ~/.p10k.zsh
fi

# Helper function to switch between prompts
prompt_switch() {
  if [[ "$1" == "starship" ]]; then
    export PROMPT_THEME="starship"
    echo "Switched to Starship prompt. Restart your shell or run: exec zsh"
  elif [[ "$1" == "p10k" ]]; then
    export PROMPT_THEME="p10k"
    echo "Switched to Powerlevel10k prompt. Restart your shell or run: exec zsh"
  else
    echo "Usage: prompt_switch [starship|p10k]"
    echo "Current prompt: $PROMPT_THEME"
  fi
}

# GH completion
eval "$(gh completion -s zsh)"

# Doom Emacs alias
alias doom="~/.config/emacs/bin/doom"